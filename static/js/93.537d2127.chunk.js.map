{"version":3,"file":"static/js/93.537d2127.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Row.js","components/Dashboard/UserParams.jsx","components/Dashboard/UsersEdit.jsx"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import React, { useState } from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { updateUserFirestore } from \"../../firebase/firestore\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst UserParams = ({ user, setErr, setMessage }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [role, setRole] = useState(\"\");\r\n  const roles = process.env.REACT_APP_ROLES.split(\", \");\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    const params = {};\r\n\r\n    if (role !== user.role) params.role = role;\r\n\r\n    try {\r\n      setErr(\"\");\r\n      await updateUserFirestore(user.uid, params);\r\n      setMessage(\"User updated\");\r\n    } catch (error) {\r\n      setErr(\"Failed to update user.\");\r\n      console.error(error.message);\r\n    }\r\n    setLoading(true);\r\n  }\r\n\r\n  function handleRole(event) {\r\n    setRole(event.target.value);\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <Form.Control plaintext readOnly defaultValue={user.uid}   />\r\n        </Col>\r\n        <Col>\r\n          <Form.Control type=\"email\" readOnly placeholder={user.email} />\r\n        </Col>  \r\n        <Col>\r\n          <Form.Control type=\"phone\" readOnly placeholder={user.phoneNumber} />\r\n        </Col>\r\n        <Col>\r\n          <Form.Control\r\n            as=\"select\"\r\n            defaultValue={user.role}\r\n            onChange={handleRole}\r\n          >\r\n            {roles?.map((role) => {\r\n              return (\r\n                <option key={role} value={role}>\r\n                  {role}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n        </Col>\r\n        <Col>\r\n          <Button disabled={loading} type=\"submit\" className=\"w-100\">\r\n            Update\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default UserParams;\r\n\r\nUserParams.propTypes = {\r\n  setErr: PropTypes.func.isRequired,\r\n  setMessage:PropTypes.func.isRequired,\r\n  user: PropTypes.shape({\r\n      firstName: PropTypes.string,\r\n      lastName: PropTypes.string,\r\n      dateOfBirth: PropTypes.string,\r\n      email: PropTypes.string,\r\n      phoneNumber: PropTypes.string,\r\n      role: PropTypes.string,\r\n      uid: PropTypes.string.isRequired,\r\n    }).isRequired\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { getAllUsers } from \"../../firebase/firestore\";\r\nimport { Card, Form, Row, Col, Alert } from \"react-bootstrap\";\r\nimport UserParams from \"./UserParams\";\r\n\r\nconst UsersEdit = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [err, setErr] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      const usersArr = await getAllUsers();\r\n      setUsers(usersArr);\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <Card className=\"h-100\">\r\n      <Card.Body>\r\n        <h3>Edit users roles</h3>\r\n        {err && <Alert variant=\"danger\">{err}</Alert>}\r\n        {message && <Alert variant=\"success\">{message}</Alert>}\r\n        <Row>\r\n          <Col>\r\n            <Form.Label>ID</Form.Label>\r\n          </Col>\r\n          <Col>\r\n            <Form.Label>Email</Form.Label>\r\n          </Col>\r\n          <Col>\r\n            <Form.Label>Phone</Form.Label>\r\n          </Col>\r\n          <Col>\r\n            <Form.Label>Role</Form.Label>\r\n          </Col>\r\n          <Col>\r\n            <Form.Label></Form.Label>\r\n          </Col>\r\n        </Row>\r\n\r\n        {users?.map((user, index) => (\r\n          <UserParams\r\n            user={user}\r\n            key={index}\r\n            setErr={setErr}\r\n            setMessage={setMessage}\r\n          />\r\n        ))}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UsersEdit;\r\n"],"names":["Row","React","_ref","ref","bsPrefix","className","_ref$as","as","Component","props","_objectWithoutProperties","_excluded","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","concat","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","_objectSpread","classNames","displayName","user","setErr","setMessage","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","role","setRole","roles","process","split","_handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","params","wrap","_context","prev","next","preventDefault","updateUserFirestore","uid","t0","console","error","message","stop","apply","arguments","Form","onSubmit","_x","children","_jsxs","Col","plaintext","readOnly","defaultValue","type","placeholder","email","phoneNumber","onChange","target","value","map","Button","disabled","users","setUsers","err","_useState5","_useState6","useEffect","fetchUsers","usersArr","getAllUsers","sent","Card","Alert","variant","index","UserParams"],"sourceRoot":""}