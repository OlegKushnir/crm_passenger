{"version":3,"file":"static/js/414.1d109b65.chunk.js","mappings":"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","sources":["components/Auth/PhoneAuth.jsx","../node_modules/react-bootstrap/esm/Container.js"],"sourcesContent":["import \"react-phone-number-input/style.css\";\r\nimport PhoneInput from \"react-phone-number-input\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { Card, Form, Button, Alert, Container } from \"react-bootstrap\";\r\n\r\nconst PhoneAuth = () => {\r\n  const { recaptcha } = useAuth();\r\n  const [err, setErr] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [notVerified, setNotVerified] = useState(true);\r\n  const [number, setNumber] = useState(\"\");\r\n  const [confirmObj, setConfirmObj] = useState(null);\r\n  const [phoneMessage, setPhoneMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  function onChange(event) {\r\n    setPhoneMessage(event.target.value);\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    try {\r\n      setNotVerified(true);\r\n      setErr(\"\");\r\n      setLoading(true);\r\n      const res = await recaptcha(number);\r\n      setConfirmObj(res);\r\n    } catch {\r\n      setErr(\"Error sending message\");\r\n    }\r\n    setLoading(false);\r\n    setNotVerified(false);\r\n  }\r\n\r\n  async function verifyPhoneMessage(event) {\r\n    event.preventDefault();\r\n    try {\r\n      setErr(\"\");\r\n      setLoading(true);\r\n      await confirmObj.confirm(phoneMessage);\r\n      navigate(\"/home\");\r\n    } catch (error) {\r\n      setErr(error.message);\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      className={\"d-flex align-items-center justify-content-center\"}\r\n      style={{ minHeight: \"100vh\" }}\r\n    >\r\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <Card>\r\n          <Card.Body>\r\n            {err && <Alert variant=\"danger\">{err}</Alert>}\r\n            {notVerified ? (\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group id=\"phone\">\r\n                  <Form.Label>Enter Your Phone</Form.Label>\r\n                  <PhoneInput\r\n                    type=\"text\"\r\n                    placeholder=\"Enter phone number\"\r\n                    required\r\n                    value={number}\r\n                    onChange={setNumber}\r\n                  />\r\n                </Form.Group>\r\n                <div id=\"recapcha-box\" className=\"w-100 mt-4\"></div>\r\n                <Button disabled={loading} className=\"w-100 mt-4\" type=\"submit\">\r\n                  Verify\r\n                </Button>\r\n              </Form>\r\n            ) : (\r\n              <Form onSubmit={verifyPhoneMessage}>\r\n                <Form.Group id=\"phoneverify\">\r\n                  <Form.Label>Confirmation</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter confirm code\"\r\n                    required\r\n                    value={phoneMessage}\r\n                    onChange={onChange}\r\n                  />\r\n                </Form.Group>\r\n                <Button disabled={loading} className=\"w-100 mt-4\" type=\"submit\">\r\n                  Confirm\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\nexport default PhoneAuth;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  fluid: false\n};\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;"],"names":["recaptcha","useAuth","_useState","useState","_useState2","_slicedToArray","err","setErr","_useState3","_useState4","loading","setLoading","_useState5","_useState6","notVerified","setNotVerified","_useState7","_useState8","number","setNumber","_useState9","_useState10","confirmObj","setConfirmObj","_useState11","_useState12","phoneMessage","setPhoneMessage","navigate","useNavigate","_handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","res","wrap","_context","prev","next","preventDefault","sent","t0","stop","apply","arguments","_verifyPhoneMessage","_callee2","_context2","confirm","message","_jsx","Container","className","style","minHeight","children","maxWidth","Card","_jsxs","Alert","variant","Form","onSubmit","_x","id","PhoneInput","type","placeholder","required","value","onChange","Button","disabled","_x2","target","React","_ref","ref","bsPrefix","fluid","_ref$as","as","Component","props","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","suffix","concat","_objectSpread","classNames","displayName","defaultProps"],"sourceRoot":""}